{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Node.js_projs\\\\Next_projs\\\\firstNextPracticeApp\\\\pages\\\\post\\\\[pid].jsx\";\nimport React from \"react\";\nexport default function Post(props) {\n  // console.log(router);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"POst Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(props); // const { postId } = query;\n            // console.log(\"post id:\", postId);\n            // try {\n            //   const res = await Axios.get(\n            //     `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\n            //   );\n            //   console.log(res);\n            //   return { comments: res.data };\n            // } catch (error) {\n            //   console.log(\"unable to get comments requests for posts\");\n\n            return _context.abrupt(\"return\", {\n              comments: \"unable to get data\"\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Node.js_projs/Next_projs/firstNextPracticeApp/pages/post/[pid].jsx"],"names":["React","Post","props","console","log","getInitialProps","comments"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAJuBD,I;;AAMxBA,IAAI,CAACI,eAAL;AAAA,sEAAuB,iBAAMH,KAAN;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXqB,6CAYd;AAAEI,cAAAA,QAAQ,EAAE;AAAZ,aAZc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Post(props) {\r\n  // console.log(router);\r\n  console.log(props);\r\n  return <div>POst Page</div>;\r\n}\r\n\r\nPost.getInitialProps = async props => {\r\n  console.log(props);\r\n  // const { postId } = query;\r\n  // console.log(\"post id:\", postId);\r\n  // try {\r\n  //   const res = await Axios.get(\r\n  //     `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\r\n  //   );\r\n  //   console.log(res);\r\n  //   return { comments: res.data };\r\n  // } catch (error) {\r\n  //   console.log(\"unable to get comments requests for posts\");\r\n  return { comments: \"unable to get data\" };\r\n  // }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}