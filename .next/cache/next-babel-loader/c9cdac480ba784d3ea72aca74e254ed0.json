{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Node.js_projs\\\\Next_projs\\\\firstNextPracticeApp\\\\pages\\\\post\\\\[pid].jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Axios from \"axios\";\n\nvar Post = function Post(_ref) {\n  var pid = _ref.pid,\n      title = _ref.title,\n      body = _ref.body,\n      comments = _ref.comments;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Post Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 50\n  }, _this);\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, pid, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            pid = query.pid;\n            console.log(query);\n            _context.prev = 3;\n            _context.next = 6;\n            return Axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(pid));\n\n          case 6:\n            res = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, query), {}, {\n              comments: res.data\n            }));\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(\"unable to get comments requests for posts\");\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, query), {}, {\n              comments: \"unable to get data\"\n            }));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Node.js_projs/Next_projs/firstNextPracticeApp/pages/post/[pid].jsx"],"names":["React","Axios","Post","pid","title","body","comments","getInitialProps","query","console","log","get","res","data"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,MAAQC,KAAR,QAAQA,KAAR;AAAA,MAAeC,IAAf,QAAeA,IAAf;AAAA,MAAqBC,QAArB,QAAqBA,QAArB;AAAA,sBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApC;AAAA,CAAb;;KAAMJ,I;;AAENA,IAAI,CAACK,eAAL;AAAA,uEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AACbL,YAAAA,GADa,GACLK,KADK,CACbL,GADa;AAErBM,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAFqB;AAAA;AAAA,mBAIDP,KAAK,CAACU,GAAN,gEACwCR,GADxC,EAJC;;AAAA;AAIbS,YAAAA,GAJa;AAAA,6EAQPJ,KARO;AAQAF,cAAAA,QAAQ,EAAEM,GAAG,CAACC;AARd;;AAAA;AAAA;AAAA;AAUnBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAVmB,6EAWPF,KAXO;AAWAF,cAAAA,QAAQ,EAAE;AAXV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Post = ({ pid, title, body, comments }) => <div>Post Page</div>;\r\n\r\nPost.getInitialProps = async ({ query }) => {\r\n  const { pid } = query;\r\n  console.log(query);\r\n  try {\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/comments?postId=${pid}`\r\n    );\r\n    // console.log(res);\r\n    return { ...query, comments: res.data };\r\n  } catch (error) {\r\n    console.log(\"unable to get comments requests for posts\");\r\n    return { ...query, comments: \"unable to get data\" };\r\n  }\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}