{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Node.js_projs\\\\Next_projs\\\\firstNextPracticeApp\\\\pages\\\\post.jsx\";\nimport React from \"react\";\nexport default function Post({\n  comments\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"POst Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const {\n    postId\n  } = query;\n\n  try {\n    const res = await Axios.get(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`);\n    return {\n      comments: res.data\n    };\n  } catch (error) {\n    console.log(\"unable to get comments requests for posts\");\n    return {\n      posts: \"unable to get data\"\n    };\n  }\n};","map":{"version":3,"sources":["C:/Node.js_projs/Next_projs/firstNextPracticeApp/pages/post.jsx"],"names":["React","Post","comments","getInitialProps","query","postId","res","Axios","get","data","error","console","log","posts"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AACzC,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAEDD,IAAI,CAACE,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;;AACA,MAAI;AACF,UAAME,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CACf,8CAA6CH,MAAO,WADrC,CAAlB;AAGA,WAAO;AAAEH,MAAAA,QAAQ,EAAEI,GAAG,CAACG;AAAhB,KAAP;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD;AACF,CAXD","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Post({ comments }) {\r\n  return <div>POst Page</div>;\r\n}\r\n\r\nPost.getInitialProps = async ({ query }) => {\r\n  const { postId } = query;\r\n  try {\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\r\n    );\r\n    return { comments: res.data };\r\n  } catch (error) {\r\n    console.log(\"unable to get comments requests for posts\");\r\n    return { posts: \"unable to get data\" };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}