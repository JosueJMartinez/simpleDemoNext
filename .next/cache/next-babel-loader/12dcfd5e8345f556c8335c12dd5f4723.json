{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Node.js_projs\\\\Next_projs\\\\firstNextPracticeApp\\\\pages\\\\post\\\\[pid].jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Axios from \"axios\";\n\nconst Post = ({\n  pid,\n  title,\n  body,\n  comments\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", body]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Comments\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: comments.map(({\n      name,\n      email,\n      body\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"By: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const {\n    pid\n  } = query;\n  console.log(query);\n\n  try {\n    const res = await Axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${pid}`); // console.log(res);\n\n    return _objectSpread(_objectSpread({}, query), {}, {\n      comments: res.data\n    });\n  } catch (error) {\n    console.log(\"unable to get comments requests for posts\");\n    return _objectSpread(_objectSpread({}, query), {}, {\n      comments: \"unable to get data\"\n    });\n  }\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Node.js_projs/Next_projs/firstNextPracticeApp/pages/post/[pid].jsx"],"names":["React","Axios","Post","pid","title","body","comments","map","name","email","getInitialProps","query","console","log","res","get","data","error"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAD,kBACX;AAAA,0BACE;AAAA,cAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,oBAAKC,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE;AAAA,cACGC,QAAQ,CAACC,GAAT,CAAa,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeJ,MAAAA;AAAf,KAAD,kBACZ;AAAA,8BACE;AAAA,kBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,2BAAQI,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UALF;AAAA,gBADF;;AAkBAP,IAAI,CAACQ,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAM;AAAER,IAAAA;AAAF,MAAUQ,KAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CACf,wDAAuDZ,GAAI,EAD5C,CAAlB,CADE,CAIF;;AACA,2CAAYQ,KAAZ;AAAmBL,MAAAA,QAAQ,EAAEQ,GAAG,CAACE;AAAjC;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACA,2CAAYF,KAAZ;AAAmBL,MAAAA,QAAQ,EAAE;AAA7B;AACD;AACF,CAbD;;AAeA,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Post = ({ pid, title, body, comments }) => (\r\n  <>\r\n    <h2>{title}</h2>\r\n    <p> {body}</p>\r\n\r\n    <h3>Comments</h3>\r\n    <ul>\r\n      {comments.map(({ name, email, body }) => (\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <p>{body}</p>\r\n          <p>By: {email}</p>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nPost.getInitialProps = async ({ query }) => {\r\n  const { pid } = query;\r\n  console.log(query);\r\n  try {\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/comments?postId=${pid}`\r\n    );\r\n    // console.log(res);\r\n    return { ...query, comments: res.data };\r\n  } catch (error) {\r\n    console.log(\"unable to get comments requests for posts\");\r\n    return { ...query, comments: \"unable to get data\" };\r\n  }\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}